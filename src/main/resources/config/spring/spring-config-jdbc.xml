<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd  
	                      http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	                      http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd         
	                      http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd         
	                      http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">
	
	<!-- druid数据库连接池管理 -->
	<bean id="druidDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="driverClassName" value="${db.driverClass}"/>

        <property name="url" value="${db.jdbcUrl}" />
        <property name="username" value="${db.username}" />
        <property name="password" value="${db.password}" />

        <property name="maxActive" value="20" />
        <property name="initialSize" value="1" />
        <property name="maxWait" value="60000" />
        <property name="minIdle" value="1" />

        <property name="timeBetweenEvictionRunsMillis" value="3000" />
        <property name="minEvictableIdleTimeMillis" value="300000" />

        <property name="validationQuery" value="${druid.validationQuery}" />
        <property name="testWhileIdle" value="true" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />

        <property name="filters" value="stat" />
	</bean>

	<!-- ================================事务相关控制开始================================================= -->
	<bean name="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="druidDataSource"></property>
	</bean>
	
	<!-- 基于注解式事务 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>

	<!-- ================================事务相关控制结束================================================= -->
	
	
	<!-- mybatis会话工厂产生session -->
	<bean id="mybatisSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="druidDataSource" />
		
		<property name="configLocation" value="classpath:config/mybatis/mybatis-config.xml" />
		   
		<!-- 自动扫描model目录, 省掉Configuration.xml里的手工配置 -->
        <!-- <property name="typeAliasesPackage" value="com.teshehui.demo.model,com.teshehui.demo.dao.po" /> -->
        
		 <!-- 显式指定Mapper文件位置 -->
        <!-- <property name="mapperLocations" value="classpath:config/mybatis/mapper/*/*.xml"></property> -->
	</bean>
	<bean id="mybatisSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate" >
		<constructor-arg index="0" ref="mybatisSessionFactory" />
	</bean>
	
	<!-- 通用的mybatisDao -->
	<bean id="mybatisDao" class="com.teshehui.framework.dao.mybatis.impl.MybatisDaoImpl">
		<property name="sqlSessionTemplate"><ref bean="mybatisSessionTemplate"/></property>
	</bean>
	

	
</beans>
